const fs = require('fs');
const path = require('path');

// MoPay Agent Icon Generation Script
console.log('üé® MoPay Agent Icon Generator');
console.log('===============================');
console.log('');

console.log('üìÅ Current Assets Status:');
const assetsDir = path.join(__dirname, 'assets');
const files = fs.readdirSync(assetsDir);

const iconFiles = ['icon.png', 'adaptive-icon.png', 'splash-icon.png', 'favicon.png'];
iconFiles.forEach(file => {
  const exists = files.includes(file);
  console.log(`  ${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

console.log('');
console.log('üìã Icon Specifications:');
console.log('  ‚Ä¢ icon.png: 1024x1024px (Main app icon)');
console.log('  ‚Ä¢ adaptive-icon.png: 1024x1024px (Android adaptive)');
console.log('  ‚Ä¢ splash-icon.png: 512x512px (Splash screen)');
console.log('  ‚Ä¢ favicon.png: 64x64px (Web favicon)');
console.log('');

console.log('üé® Design Template Available:');
console.log('  üìÑ assets/mopay-icon-template.svg');
console.log('');

console.log('üõ†Ô∏è  Next Steps:');
console.log('  1. Open mopay-icon-template.svg in design software');
console.log('  2. Customize colors and design as needed');
console.log('  3. Export PNG files in specified sizes');
console.log('  4. Replace existing files in assets/ folder');
console.log('  5. Test: npx expo start');
console.log('');

console.log('üéØ Brand Colors:');
console.log('  ‚Ä¢ Primary: #007bff (MoPay Blue)');
console.log('  ‚Ä¢ Success: #28a745 (Green)');
console.log('  ‚Ä¢ Warning: #ffc107 (Yellow)');
console.log('  ‚Ä¢ Background: #ffffff (White)');
console.log('');

console.log('üìö Resources:');
console.log('  ‚Ä¢ Expo Icons: https://docs.expo.dev/guides/icons/');
console.log('  ‚Ä¢ Android Adaptive: https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive');
console.log('  ‚Ä¢ iOS Icons: https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/');

// Check if app.json is properly configured
console.log('');
console.log('‚öôÔ∏è  App Configuration:');
try {
  const appJson = JSON.parse(fs.readFileSync('app.json', 'utf8'));
  const expo = appJson.expo;

  console.log(`  ‚úÖ Icon: ${expo.icon ? 'Configured' : 'Missing'}`);
  console.log(`  ‚úÖ Splash: ${expo.splash?.image ? 'Configured' : 'Missing'}`);
  console.log(`  ‚úÖ Adaptive: ${expo.android?.adaptiveIcon ? 'Configured' : 'Missing'}`);
  console.log(`  ‚úÖ Favicon: ${expo.web?.favicon ? 'Configured' : 'Missing'}`);
} catch (error) {
  console.log('  ‚ùå Error reading app.json');
}